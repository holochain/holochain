[package]
name = "holochain_zome_types"
version = "0.3.0-beta-dev.30"
description = "Holochain zome types"
license = "Apache-2.0"
homepage = "https://github.com/holochain/holochain"
documentation = "https://docs.rs/holochain_zome_types"
readme = "README.md"
authors = [ "Holochain Core Dev Team <devcore@holochain.org>" ]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
kitsune_p2p_dht = { version = "^0.3.0-beta-dev.19", path = "../kitsune_p2p/dht", optional = true }
kitsune_p2p_timestamp = { version = "^0.3.0-beta-dev.8", path = "../kitsune_p2p/timestamp" }
kitsune_p2p_block = { version = "^0.3.0-beta-dev.20", path = "../kitsune_p2p/block" }
kitsune_p2p_bin_data = { version = "^0.3.0-beta-dev.18", path = "../kitsune_p2p/bin_data" }
holo_hash = { version = "^0.3.0-beta-dev.24", path = "../holo_hash", features = ["encoding"] }
holochain_integrity_types = { version = "^0.3.0-beta-dev.28", path = "../holochain_integrity_types", features = ["tracing"] }
holochain_serialized_bytes = { workspace = true }
holochain_secure_primitive = { version = "^0.3.0-beta-dev.22", path = "../holochain_secure_primitive"}
holochain_nonce = {version = "^0.3.0-beta-dev.25", path = "../holochain_nonce"}
paste = "1.0.12"
serde = { version = "1.0", features = [ "derive", "rc" ] }
serde_bytes = "0.11"
serde_yaml = { version = "0.9", optional = true }
subtle = "2"
thiserror = "1.0.22"
tracing = { workspace = true }
holochain_wasmer_common = { workspace = true }
derive_more = { workspace = true }

# fixturator dependencies
fixt = { version = "^0.3.0-beta-dev.2", path = "../fixt", optional = true }
strum = { version = "0.18.0", optional = true }
rand = { version = "0.8.5", optional = true }

# sqlite dependencies
rusqlite = { version = "0.29", optional = true }
num_enum = { version = "0.5", optional = true }

# full-dna-def dependencies
derive_builder = { version = "0.9", optional = true }
nanoid = { version = "0.3", optional = true }
shrinkwraprs = { version = "0.3", optional = true }

# fuzzing
arbitrary = { version = "1.0", features = ["derive"], optional = true}
proptest = { version = "1", optional = true }
proptest-derive = { version = "0", optional = true }

# contrafact
contrafact = { version = "0.2.0-rc.1", optional = true }
once_cell = { version = "1.4", optional = true }

# for hex encoding of signatures
subtle-encoding = {version = "0.5", optional = true}

[dev-dependencies]
holochain_zome_types = { path = ".", features = ["test_utils"] }
once_cell = { version = "1.4", optional = false }
matches = "0.1"

[lints]
workspace = true

[features]
default = ["full-dna-def", "subtle-encoding"]

# Extra impls for DnaDef, including InlineZome, which are not used in Wasm
# but used in Holochain
full-dna-def = ["derive_builder", "nanoid", "shrinkwraprs", "holochain_integrity_types/full-dna-def", "kitsune_p2p_dht"]

full = ["default", "sqlite", "num_enum", "kitsune_p2p_timestamp/full", "properties", "holochain_integrity_types/full"]

fixturators = ["fixt", "rand", "strum", "holo_hash/fixturators", "holochain_integrity_types/test_utils", "full-dna-def"]

properties = ["serde_yaml"]

fuzzing = [
  "arbitrary",
  "contrafact",
  "proptest",
  "proptest-derive",
  "holochain_integrity_types/fuzzing",
  "holochain_serialized_bytes/fuzzing",
  "holo_hash/fuzzing",
  "kitsune_p2p_timestamp/fuzzing",
]

test_utils = [
  "fuzzing",
  "once_cell",
  "kitsune_p2p_block/sqlite",
  "holo_hash/hashing",
  "holo_hash/test_utils",
  "full-dna-def",
  "holochain_integrity_types/test_utils",
]

sqlite-encrypted = [
  "rusqlite",
  "rusqlite/bundled-sqlcipher-vendored-openssl",
  "holo_hash/sqlite-encrypted",
  "kitsune_p2p_dht/sqlite-encrypted",
  "kitsune_p2p_timestamp/sqlite-encrypted",
  "kitsune_p2p_block/sqlite-encrypted",
  "kitsune_p2p_bin_data/sqlite-encrypted",
]
sqlite = [
  "rusqlite",
  "rusqlite/bundled",
  "holo_hash/sqlite",
  "kitsune_p2p_dht/sqlite",
  "kitsune_p2p_timestamp/sqlite",
  "kitsune_p2p_block/sqlite",
  "kitsune_p2p_bin_data/sqlite",
]
