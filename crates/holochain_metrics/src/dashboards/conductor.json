[{"apiVersion":"influxdata.com/v2alpha1","kind":"Dashboard","metadata":{"name":"ecstatic-benz-6ba001"},"spec":{"charts":[{"axes":[{"name":"x"},{"label":"seconds","name":"y"}],"binSize":10,"colors":[{"hex":"#000000"},{"hex":"#E69F00"},{"hex":"#56B4E9"},{"hex":"#009E73"},{"hex":"#F0E442"},{"hex":"#0072B2"},{"hex":"#D55E00"},{"hex":"#CC79A7"}],"height":4,"kind":"Heatmap","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"P2P Event duration","queries":[{"query":"from(bucket: \"influxive\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hc.conductor.p2p_event.duration.s\")"}],"staticLegend":{},"width":4,"xCol":"_time","yCol":"_value"},{"axes":[{"name":"x"},{"label":"seconds","name":"y"}],"binSize":10,"colors":[{"hex":"#000000"},{"hex":"#E69F00"},{"hex":"#56B4E9"},{"hex":"#009E73"},{"hex":"#F0E442"},{"hex":"#0072B2"},{"hex":"#D55E00"},{"hex":"#CC79A7"}],"height":4,"kind":"Heatmap","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Publish DHT ops workflow duration","queries":[{"query":"from(bucket: \"influxive\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hc.conductor.workflow.duration.s\")\n  |> filter(fn: (r) => r[\"workflow\"] == \"publish_dht_ops_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":4,"xCol":"_time","yCol":"_value","yPos":4},{"axes":[{"name":"x"},{"label":"seconds","name":"y"}],"binSize":10,"colors":[{"hex":"#000000"},{"hex":"#E69F00"},{"hex":"#56B4E9"},{"hex":"#009E73"},{"hex":"#F0E442"},{"hex":"#0072B2"},{"hex":"#D55E00"},{"hex":"#CC79A7"}],"height":4,"kind":"Heatmap","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"App validation workflow duration","queries":[{"query":"from(bucket: \"influxive\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hc.conductor.workflow.duration.s\")\n  |> filter(fn: (r) => r[\"workflow\"] == \"app_validation_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":4,"xCol":"_time","xPos":4,"yCol":"_value"},{"axes":[{"name":"x"},{"label":"seconds","name":"y"}],"binSize":10,"colors":[{"hex":"#000000"},{"hex":"#E69F00"},{"hex":"#56B4E9"},{"hex":"#009E73"},{"hex":"#F0E442"},{"hex":"#0072B2"},{"hex":"#D55E00"},{"hex":"#CC79A7"}],"height":4,"kind":"Heatmap","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Sys validation workflow duration","queries":[{"query":"from(bucket: \"influxive\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hc.conductor.workflow.duration.s\")\n  |> filter(fn: (r) => r[\"workflow\"] == \"sys_validation_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":4,"xCol":"_time","xPos":4,"yCol":"_value","yPos":4},{"axes":[{"name":"x"},{"label":"seconds","name":"y"}],"binSize":10,"colors":[{"hex":"#000000"},{"hex":"#E69F00"},{"hex":"#56B4E9"},{"hex":"#009E73"},{"hex":"#F0E442"},{"hex":"#0072B2"},{"hex":"#D55E00"},{"hex":"#CC79A7"}],"height":4,"kind":"Heatmap","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Integrate DHT ops workflow duration","queries":[{"query":"from(bucket: \"influxive\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hc.conductor.workflow.duration.s\")\n  |> filter(fn: (r) => r[\"workflow\"] == \"integrate_dht_ops_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":4,"xCol":"_time","xPos":8,"yCol":"_value"},{"axes":[{"name":"x"},{"label":"seconds","name":"y"}],"binSize":10,"colors":[{"hex":"#000000"},{"hex":"#E69F00"},{"hex":"#56B4E9"},{"hex":"#009E73"},{"hex":"#F0E442"},{"hex":"#0072B2"},{"hex":"#D55E00"},{"hex":"#CC79A7"}],"height":4,"kind":"Heatmap","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Validation receipt workflow duration","queries":[{"query":"from(bucket: \"influxive\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hc.conductor.workflow.duration.s\")\n  |> filter(fn: (r) => r[\"workflow\"] == \"validation_receipt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":4,"xCol":"_time","xPos":8,"yCol":"_value","yPos":4}],"name":"Holochain Conductor"}}]