[package]
name = "kitsune_p2p"
version = "0.3.0-beta-dev.0"
description = "p2p / dht communication framework"
license = "Apache-2.0"
homepage = "https://github.com/holochain/holochain"
documentation = "https://docs.rs/kitsune_p2p"
authors = ["Holochain Core Dev Team <devcore@holochain.org>"]
keywords = ["holochain", "holo", "p2p", "dht", "networking"]
categories = ["network-programming"]
edition = "2021"

[dependencies]
arrayref = "0.3.6"
base64 = "0.13"
bloomfilter = { version = "1.0.5", features = ["serde"] }
bytes = "1.4.0"
derive_more = "0.99.11"
futures = "0.3"
ghost_actor = "=0.3.0-alpha.5"
governor = "0.3.2"
itertools = "0.10"
kitsune_p2p_fetch = { version = "^0.3.0-beta-dev.0", path = "../fetch" }
kitsune_p2p_mdns = { version = "^0.2.0", path = "../mdns" }
kitsune_p2p_proxy = { version = "^0.3.0-beta-dev.0", path = "../proxy" }
kitsune_p2p_timestamp = { version = "^0.2.0", path = "../timestamp", features = ["now"] }
kitsune_p2p_block = { version = "^0.3.0-beta-dev.0", path = "../block" }
kitsune_p2p_transport_quic = { version = "^0.3.0-beta-dev.0", path = "../transport_quic", optional = true }
kitsune_p2p_types = { version = "^0.3.0-beta-dev.0", path = "../types", default-features = false }
must_future = "0.1.1"
nanoid = "0.4"
num-traits = "0.2"
holochain_trace = { version = "^0.2.0", path = "../../holochain_trace" }
once_cell = "1.4.1"
parking_lot = "0.11.1"
rand = "0.8.5"
reqwest = "0.11.2"
serde = { version = "1.0", features = ["derive"] }
serde_bytes = "0.11"
serde_json = { version = "1.0.51", features = [ "preserve_order" ] }
shrinkwraprs = "0.3.0"
thiserror = "1.0.22"
tokio = { version = "1.27", features = ["full"] }
tracing = "0.1"
tokio-stream = "0.1"
tx5 = { version = "=0.0.1-alpha.17", optional = true }
url2 = "0.0.6"
fixt = { path = "../../fixt", version = "^0.2.0"}

# arbitrary could be made optional
arbitrary = { version = "1.0", features = ["derive"] }

blake2b_simd = { version = "0.5.10", optional = true }
maplit = { version = "1", optional = true }
mockall = { version = "0.11.3", optional = true }

[dev-dependencies]
# include self with test_utils feature, to allow integration tests to run properly
kitsune_p2p = { path = ".", features = ["test_utils", "sqlite"]}

contrafact = { version = "0.1.0-dev.1" }
kitsune_p2p_bootstrap = { path = "../bootstrap", features = ["sqlite"] }
kitsune_p2p_timestamp = { path = "../timestamp", features = ["now", "arbitrary"] }
kitsune_p2p_types = { path = "../types", features = ["test_utils"] }
maplit = "1"
mockall = "0.10.2"
pretty_assertions = "0.7"
test-case = "1.0.0"
tokio = { version = "1.11", features = ["full", "test-util"] }
tracing-subscriber = "0.3.16"

[features]
default = [ "tx2", "tx5" ]

test_utils = [
  "blake2b_simd",
  "tokio/test-util",
  "ghost_actor/test_utils",
  "kitsune_p2p_types/test_utils",
  "maplit",
  "mockall",
  "kitsune_p2p_timestamp/arbitrary",
]
mock_network = [
  "kitsune_p2p_types/test_utils",
  "mockall",
]

tx2 = [ "kitsune_p2p_types/tx2", "kitsune_p2p_transport_quic" ]

sqlite-encrypted = [
  "kitsune_p2p_fetch/sqlite-encrypted",
  "kitsune_p2p_proxy/sqlite-encrypted",
  "kitsune_p2p_timestamp/sqlite-encrypted",
  "kitsune_p2p_block/sqlite-encrypted",
  "kitsune_p2p_transport_quic/sqlite-encrypted",
  "kitsune_p2p_types/sqlite-encrypted",
]
sqlite = [
  "kitsune_p2p_fetch/sqlite",
  "kitsune_p2p_proxy/sqlite",
  "kitsune_p2p_timestamp/sqlite",
  "kitsune_p2p_block/sqlite",
  "kitsune_p2p_transport_quic/sqlite",
  "kitsune_p2p_types/sqlite",
]
