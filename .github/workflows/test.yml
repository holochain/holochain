name: test
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: '-Dwarnings'
  RUST_BACKTRACE: 1
jobs:
  test-job-id:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest,
          macos-latest,
          macos-13,
          windows-latest,
        ]
    steps:
      - name: free disk space
        if: matrix.os == 'ubuntu-latest'
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false

      - name: checkout
        uses: actions/checkout@v4

      - name: go toolchain
        uses: actions/setup-go@v5
        with:
          go-version: '=1.20.0'

      - name: rust cache
        uses: Swatinem/rust-cache@v2

      - name: cargo sweep stamp
        run: |
          cargo install cargo-sweep
          cargo sweep --stamp

      - name: install vcpkg packages
        if: matrix.os == 'windows-latest'
        uses: johnwason/vcpkg-action@v6
        id: vcpkg
        with:
          triplet: x64-windows-release
          token: ${{ github.token }}
          manifest-dir: ${{ github.workspace }}/.github/manifest
          github-binarycache: true

      - name: build windows
        if: matrix.os == 'windows-latest'
        run: |-
          $env:OPENSSL_NO_VENDOR="1"
          $env:OPENSSL_DIR="$(pwd)\vcpkg\packages\openssl_x64-windows-release"
          $env:SODIUM_LIB_DIR="$(pwd)\vcpkg\packages\libsodium_x64-windows-release\lib"
          make build-workspace

      - name: build
        if: matrix.os != 'windows-latest'
        run: make build-workspace

      - name: test windows
        if: matrix.os == 'windows-latest'
        run: |-
          $env:OPENSSL_NO_VENDOR="1"
          $env:OPENSSL_DIR="$(pwd)\vcpkg\packages\openssl_x64-windows-release"
          $env:SODIUM_LIB_DIR="$(pwd)\vcpkg\packages\libsodium_x64-windows-release\lib"
          make test-workspace

      - name: test
        if: matrix.os != 'windows-latest'
        run: make test-workspace

      - name: cargo sweep file
        run: cargo sweep --file

  tests-pass:
    if: ${{ always() }}
    name: 'All Unit Tests Pass'
    runs-on: 'ubuntu-latest'
    needs:
      - test-job-id
    steps:
      - name: check status
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
