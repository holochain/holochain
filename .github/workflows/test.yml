name: test

on:
  pull_request:
    branches:
      - develop
      - develop-*
      - feat/integrate-k2

concurrency:
  group: test-${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"
  RUST_BACKTRACE: 1

jobs:
  static-job-id:
    name: static
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: "Common Test Setup Actions"
        uses: ./.github/actions/common-pre

      # we cannot use cmake 4 until openssl-src is updated
      - name: cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.31.x'

      - name: static-fmt
        run: make static-fmt

      - name: static-toml
        run: make static-toml

      - name: static-clippy
        run: make static-clippy

      - name: static-clippy-unstable
        run: make static-clippy-unstable

      - name: static-doc
        run: make static-doc

      - name: "Common Test Teardown Actions"
        uses: ./.github/actions/common-post

  test-job-id:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: wasmer_sys
          - os: macos-latest
            target: wasmer_sys
          - os: macos-13
            target: wasmer_sys
          - os: windows-latest
            target: wasmer_sys
          - os: ubuntu-latest
            target: wasmer_sys-unstable

          # Our intended target for wasmer_wamr feature is iOS and Android.
          # For now, wasmer_wamr tests are only run on macos-latest
          - os: macos-latest
            target: wasmer_wamr
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: "Common Test Setup Actions"
        uses: ./.github/actions/common-pre

      # we cannot use cmake 4 until openssl-src is updated
      - name: cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.31.x'

      - name: install build dependencies (macos-latest, wasmer_wamr)
        if: matrix.os == 'macos-latest' && matrix.target == 'wasmer_wamr'
        shell: bash
        run: brew install cmake ninja

      - name: build (windows-latest)
        if: matrix.os == 'windows-latest'
        run: |-
          $env:SODIUM_LIB_DIR="$(pwd)\vcpkg\packages\libsodium_x64-windows-release\lib"
          make build-workspace-${{ matrix.target }}

      - name: build
        if: matrix.os != 'windows-latest'
        run: make build-workspace-${{ matrix.target }}

      - name: install nextest
        run: cargo install cargo-nextest

      - name: test (windows-latest)
        if: matrix.os == 'windows-latest'
        run: |-
          $env:SODIUM_LIB_DIR="$(pwd)\vcpkg\packages\libsodium_x64-windows-release\lib"
          make test-workspace-${{ matrix.target }}

      - name: test
        if: matrix.os != 'windows-latest'
        run: make test-workspace-${{ matrix.target }}

      - name: "Common Test Teardown Actions"
        uses: ./.github/actions/common-post

  ci-pass:
    if: ${{ always() }}
    name: "All Jobs Pass"
    runs-on: "ubuntu-latest"
    needs:
      - static-job-id
      - test-job-id
    steps:
      - name: check status
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
