name: "holochain build and test"

on:
  workflow_call:
    inputs:
      repo_path:
        description: "a path to the holochain repository"
        required: false
        type: string
        default: "."
      fail_fast:
        description: "whether all tests will be stopped on first failure occurrence or run to completion"
        required: false
        type: boolean
        default: false
    secrets:
      GITHUB_ACCESS_TOKEN:
        description: "A GitHub access token which can be used for cloning the project"
        required: true
      CACHIX_AUTH_TOKEN_HOLOCHAIN_CI_INTERNAL:
        description: "The Cachix token for `holochain-ci-internal` to be used for caching Holochain CI runs"
        required: true

jobs:
  test:
    strategy:
      fail-fast: ${{ inputs.fail_fast }}
      matrix:
        cmd:
          # ensure functionality on multiple platforms
          - pkgs:
              - build-holonix-tests-integration
            extra_arg: "--override-input versions ./versions/weekly --override-input holochain ${{ inputs.repo_path }}"

          # ensure that any Nix changes on this branch don't cause problems for maintenance versions
          - pkgs:
              - build-holonix-tests-integration
            extra_arg: "--override-input versions ./versions/0_2"
          - pkgs:
              - build-holonix-tests-integration
            extra_arg: "--override-input versions ./versions/0_3"
          - pkgs:
              - build-holonix-tests-integration
            extra_arg: "--override-input versions ./versions/weekly"
        platform:
          - system: aarch64-darwin
          - system: x86_64-linux

        include:
          # we only run repo consistency checks on x86_64-linux
          - cmd:
              pkgs:
                - build-release-automation-tests-unit
              extra_arg: "--override-input versions './versions/weekly' --override-input holochain ${{ inputs.repo_path }}"
            platform:
              system: x86_64-linux

          # TODO: can this be skipped during a release run because it duplicates the release-prepare job?
          - cmd:
              pkgs:
                - build-release-automation-tests-repo
              extra_arg: "--override-input versions ./versions/weekly --override-input repo-git 'path:.git'"
            platform:
              system: x86_64-linux

    # runs-on: ${{ matrix.platform.runs-on }}
    runs-on: [self-hosted, multi-arch]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: false

      - name: Print matrix
        env:
          MATRIX: ${{ toJSON(matrix) }}
        run: echo ${MATRIX}

      - name: "Test command ${{ join(matrix.cmd.pkgs, ',') }}"
        env:
          system: ${{ matrix.platform.system }}
          NIX_CONFIG: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"
          # TODO Want to be able to choose between internal/external when building external PRs
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN_HOLOCHAIN_CI_INTERNAL }}
        run: |
          set -xe

          git status

          # If a nix store path was passed, ensure it exists locally. This will fetch the path from cachix.
          if [[ ${{ inputs.repo_path }} == "/nix/"* ]]; then
            nix-store --realise ${{inputs.repo_path }}

            # Temporary workaround for https://github.com/NixOS/nix/issues/10202
            git config --global --add safe.directory ${{ inputs.repo_path }}
          fi

          # first build all derivations. this could be enough for test derivations.
          nix build -L --show-trace \
            ${{ matrix.cmd.extra_arg }} \
            .#packages.${system}.${{ join(matrix.cmd.pkgs, ' .#packages.${system}.')}}

          # Temporary workaround for https://github.com/NixOS/nix/issues/10202
          if [[ ${{ inputs.repo_path }} == "/nix/"* ]]; then
            git config --global --unset safe.directory ${{ inputs.repo_path }}
          fi

          # Don't exit if this fails so we can clean up the profile
          for i in result*; do
            cachix push holochain-ci-internal $i || true
          done

          rm result*
