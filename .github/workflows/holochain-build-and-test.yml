name: "holochain build and test"

on:
  workflow_call:
    inputs:
      repo_path:
        description: "a path to the holochain repository"
        required: false
        type: string
        default: "."
      fail_fast:
        description: "whether all tests will be stopped on first failure occurence or run to completion"
        required: false
        type: boolean
        default: false
    secrets:
      CACHIX_AUTH_TOKEN_HOLOCHAIN_CI:
        description: "The Cachix token for `holochain-ci` to be used for caching Holonix"
        required: true
      CACHIX_AUTH_TOKEN_HOLOCHAIN_CI_INTERNAL:
        description: "The Cachix token for `holochain-ci-internal` to be used for caching Holochain CI runs"
        required: true

jobs:
  test:
    strategy:
      fail-fast: ${{ inputs.fail_fast }}
      matrix:
        cmd:
          # ensure functionality on multiple platforms
          - pkgs:
              - build-holochain-tests-unit-all
              - build-holonix-tests-integration
            extra_arg: "--override-input versions ./versions/weekly --override-input holochain ${{ inputs.repo_path }}"

          # ensure that any Nix changes on this branch don't cause problems for maintenance versions
          - pkgs:
              - build-holonix-tests-integration
            extra_arg: "--override-input versions ./versions/0_1"
          - pkgs:
              - build-holonix-tests-integration
            extra_arg: "--override-input versions ./versions/0_2"
          - pkgs:
              - build-holonix-tests-integration
            extra_arg: "--override-input versions ./versions/weekly"
        platform:
          - system: x86_64-darwin
          - system: aarch64-darwin
          - system: x86_64-linux

        include:
          # we only run repo consistency checks on x86_64-linux
          - cmd:
              pkgs:
                - build-holochain-build-crates-standalone
                - build-holochain-tests-static-all
                - build-release-automation-tests-unit
              extra_arg: "--override-input versions './versions/weekly' --override-input holochain ${{ inputs.repo_path }}"
            platform:
              system: x86_64-linux

          # TODO: can this be skipped during a release run because it duplicates the release-prepare job?
          - cmd:
              pkgs:
                - build-release-automation-tests-repo
              extra_arg: "--override-input repo-git 'path:.git'"
            platform:
              system: x86_64-linux

    # runs-on: ${{ matrix.platform.runs-on }}
    runs-on: [self-hosted, multi-arch]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: false

      - name: Print matrix
        env:
          MATRIX: ${{ toJSON(matrix) }}
        run: echo ${MATRIX}

      - name: "Test command ${{ join(matrix.cmd.pkgs, ',') }}"
        env:
          system: ${{ matrix.platform.system }}
          NIX_CONFIG: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"
          # TODO Want to be able to choose between internal/external when building external PRs
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN_HOLOCHAIN_CI_INTERNAL }}
        run: |
          set -xe

          git status

          # if a nix store path was passed, ensure it exists locally
          if [[ ${{ inputs.repo_path }} == "/nix/"* ]]; then
            nix-store --realise ${{inputs.repo_path }}
          fi

          # first build all derivations. this could be enough for test derivations.
          nix build --no-link -L --show-trace \
            .#packages.${system}.${{ join(matrix.cmd.pkgs, ' .#packages.${system}.')}}
          
          # Don't exit if this fails so we can clean up the profile
          cachix push holochain-ci-internal result || true
          
          rm result*

          # TODO: remove this once we've implemented all tests and know that we don't need it
          # if there's something to run we generate separate commands
          # if [[ ${{ matrix.cmd.verb }} == "run" ]]; then
          #   export basecmd="nix run -L --show-trace .#packages.${system}."
          #   ${basecmd}${{ join(matrix.cmd.pkgs, '; ${basecmd}') }}
          # fi

  # ensures the cache is regularly updated for the supported versions on multiple platforms
  cache-update:
    strategy:
      fail-fast: false
      matrix:
        cmd:
          - extra_arg: '--override-input versions "github:holochain/holochain?dir=versions/0_1"'
          - extra_arg: '--override-input versions "github:holochain/holochain?dir=versions/0_2"'
          - extra_arg: '--override-input versions "github:holochain/holochain?dir=versions/weekly"'
        platform:
          - system: x86_64-darwin
          - system: aarch64-darwin
          - system: x86_64-linux

    runs-on: [ self-hosted, multi-arch ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: false

      - name: Print matrix
        env:
          MATRIX: ${{ toJSON(matrix) }}
        run: echo ${MATRIX}

      - name: "Cache packages ${{ join(matrix.cmd.pkgs, ',') }}"
        env:
          system: ${{ matrix.platform.system }}
          NIX_CONFIG: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"
          CACHIX_AUTH_TOKEN: "${{ secrets.CACHIX_AUTH_TOKEN_HOLOCHAIN_CI }}"
        run: |
          set -xe

          # if a nix store path was passed, ensure it exists locally
          if [[ ${{ inputs.repo_path }} == "/nix/"* ]]; then
            nix-store --realise ${{inputs.repo_path }}
          fi

          # See https://docs.cachix.org/pushing#id1
          nix build -L \
            ${{ matrix.cmd.extra_arg }} \
            .#devShells.${system}.holonix

          # Don't exit if this fails so we can clean up the profile
          cachix push holochain-ci result || true
          
          rm result*
