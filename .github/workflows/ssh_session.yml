name: SSH session

on:
  workflow_dispatch:
    inputs:
      platform:
        description: "target platform"
        required: false
        default: "macos-latest"
        type: string
      extend-space:
        description: "extend the runner's space"
        required: false
        default: false
        type: boolean

jobs:
  ssh-session:
    runs-on: ${{ github.event.inputs.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extend space
        uses: ./.github/actions/extend-space
        if: ${{ github.event.inputs.platform == 'ubuntu-latest'  && github.event.inputs.extend-space == true }}

      - name: Install nix
        uses: cachix/install-nix-action@v16

      - name: Use cachix
        id: cachix_use
        continue-on-error: true
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          CACHIX_SIGNING_KEY: "${{ secrets.CACHIX_SIGNING_KEY }}"
        run: |
          cachix use holochain-ci

      - name: Setup cachix
        uses: cachix/cachix-action@v10
        if: ${{ steps.cachix_use.outcome != 'success'  }}
        with:
          name: holochain-ci
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          installCommand: |
            nix-env -if https://github.com/cachix/cachix/tarball/master \
              --substituters 'https://cache.nixos.org https://cachix.cachix.org' \
              --trusted-public-keys 'cachix.cachix.org-1:eWNHQldwUO7G2VkjpnjDbWwy4KQ/HNxht7H4SSoMckM= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY='

      - name: Restore the holochain release repository
        uses: steveeJ-forks/actions-cache/restore@main
        with:
          path: |
            /var/tmp/holochain_release.sh
            # asterisk is a workaround for https://github.com/actions/cache/issues/494
            /var/tmp/holochain_repo/*
            !/var/tmp/holochain_repo/.cargo/
            !/var/tmp/holochain_repo/target/
          key: holochain-repo-
          required: false

      - name: Fetch cargo related state and build files
        uses: steveeJ-forks/actions-cache/restore@main
        with:
          path: |
            /var/tmp/holochain_repo/.cargo/bin/
            /var/tmp/holochain_repo/.cargo/registry/index/
            /var/tmp/holochain_repo/.cargo/registry/cache/
            /var/tmp/holochain_repo/.cargo/git/db/
            /var/tmp/holochain_repo/target/
          key: ${{ runner.os }}-test-${{ matrix.testCommand.name }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-test-cargo-test-slow
            ${{ runner.os }}-test
            ${{ runner.os }}-prepare
          required: false

      - name: Move cargo related state and build files
        run: |
          if [[ -e /var/tmp/holochain_repo/.cargo ]]; then
            mv -f /var/tmp/holochain_repo/.cargo ./
          fi
          if [[ -e /var/tmp/holochain_repo/target ]]; then
            mv -f /var/tmp/holochain_repo/target/ ./
          fi

      - name: Set NIX_PATH (FIXME)
        run: echo NIX_PATH=nixpkgs=$(./scripts/nix_path.sh) >> $GITHUB_ENV

      - name: debug
        env:
          HOLOCHAIN_RELEASE_SH: "/var/tmp/holochain_release.sh"
        run: |
          set -x
          env
          nix-shell --version
          nix --version
          pwd
          cat /proc/mounts
          mkdir -p ~/.ssh/
          cat <<EOF > ~/.ssh/config
          Host uptermd.upterm.dev
            StrictHostKeyChecking yes
          EOF

      - name: Setup SSH session
        uses: steveeJ-forks/action-upterm@main
        if: ${{ always() }}
        with:
          ## limits ssh access and adds the ssh public key for the user which triggered the workflow
          limit-access-to-actor: true
          ## limits ssh access and adds the ssh public keys of the listed GitHub users
          limit-access-to-users: steveeJ,jost-s,freesig,neonphog,thedavidmeister,maackle
