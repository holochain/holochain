name: holochain build and test
on:
  workflow_dispatch:
  pull_request:

concurrency:
  group: build-${{ github.ref_name }}-${{ github.event_name }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build-holochain:
    strategy:
      fail-fast: false
      matrix:
        cmd:
          - pkgs:
              - holochain-tests-wasm
              - holochain-tests-nextest
              - holochain-tests-nextest-tx5
            verb: build
        platform:
          - system: x86_64-darwin
            runs-on: multi-arch
          - system: aarch64-darwin
            runs-on: multi-arch
          - system: x86_64-linux
            runs-on: multi-arch

        include:
          - cmd:
              pkgs:
                - release-automation-tests
                - release-automation-tests-repo
              verb: build
            platform:
              system: x86_64-linux
              runs-on: multi-arch
          - cmd:
              pkgs:
                - holochain-tests-clippy
                - holochain-tests-fmt
                - holochain-tests-doc
              verb: build
            platform:
              system: x86_64-linux
              runs-on: ubuntu-latest

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: false

      - name: Install nix
        uses: cachix/install-nix-action@v18
        if: ${{ matrix.platform.runs-on != 'multi-arch' }}
        with:
          extra_nix_config: |
            experimental-features = flakes nix-command
      - name: Setup cachix
        uses: cachix/cachix-action@v12
        continue-on-error: ${{ matrix.platform.runs-on == 'multi-arch' }}
        with:
          name: holochain-ci
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Restart nix-daemon
        if: ${{ matrix.platform.runs-on == 'ubuntu-latest' }}
        run: |
          sudo bash -c 'echo extra-experimental-features = ca-derivations impure-derivations >> /etc/nix/nix.conf'
          sudo systemctl stop nix-daemon

      - name: "Test comand ${{ matrix.nixCommand }}"
        env:
          system: ${{ matrix.platform.system }}
        run: |
          set -xe

          # first build all derivations. this could be enough for test derivations.
          nix build -L --show-trace .#packages.${system}.${{ join(matrix.cmd.pkgs, ' .#packages.${system}.')}}

          # if there's something to run we generate separate commands
          if [[ ${{ matrix.cmd.verb }} == "run" ]]; then
            export basecmd="nix run -L --show-trace .#packages.${system}."
            ${basecmd}${{ join(matrix.cmd.pkgs, '; ${basecmd}') }}
          fi
